plugins {
    id "org.asciidoctor.jvm.convert" version "3.2.0"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "application"
    id "org.mikeneck.graalvm-native-image" version "0.8.0"
}

version "0.1"
group "slack.set.profile"

repositories {
    jcenter()
    mavenCentral()
    google()
}

configurations {
    r8
}

application {
    mainClass.set("slack.set.profile.SlackSetProfileCommand")
}

shadowJar {
    mainClassName = application.mainClass.get()
}

def r8File = new File("$buildDir/libs/$archivesBaseName-$version-r8.jar")

task r8(type: JavaExec) {
    dependsOn(configurations.named('runtimeClasspath'))
    dependsOn(shadowJar)
    inputs.files(shadowJar.archiveFile.get(), 'src/main/proguard-rules.txt')
    outputs.file(r8File)

    classpath(configurations.r8)
    main = 'com.android.tools.r8.R8'
    // usage help here : https://r8.googlesource.com/r8/+/refs/heads/2.1/src/main/java/com/android/tools/r8/R8CommandParser.java#63
    // proguard configuration help https://www.guardsquare.com/en/products/proguard/manual/examples
    args = [
            '--release',
            '--classfile',
            '--output', r8File.toString(),
            '--pg-conf', 'src/main/proguard-rules.txt',
            '--lib', System.properties['java.home'].toString()
    ]
    doFirst {
        args += shadowJar.archiveFile.get()
    }
}

// dumb task to be able to refer to a Jar task to get the r8 jar
task r8Jar(type: Jar, dependsOn: r8) {
    from {
        zipTree r8.outputs.files.first()
    }
}

nativeImage {
    jarTask = r8Jar
    executableName = "slack"
    mainClass = application.mainClass.get()
    graalVmHome = System.getProperty('java.home')
    arguments(
            '--no-fallback',
            "--allow-incomplete-classpath", // usually a bad idea
            "--enable-https",
    )
}

dependencies {
//    annotationProcessor("info.picocli:picocli-codegen:4.5.2")
    
    compileOnly("org.graalvm.nativeimage:svm:20.3.0")
//    implementation("info.picocli:picocli:4.5.1")

    r8 'com.android.tools:r8:2.1.67'
}

java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}


apply from: 'gradle/asciidoc.gradle'


